{"version":3,"sources":["pages/payments/UtilCard.js","pages/payments/Payments.js","pages/sales/Sales.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["UtilCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFocus","event","state","percent","setState","handleBlur","setPer","handleChange","value","target","length","parseInt","setPercentages","pkey","bind","assertThisInitialized","react_default","a","createElement","Card_default","style","width","padding","marginTop","display","TextField_default","onChange","verticalAlign","inputProps","onFocus","onBlur","marginRight","color","fontWeight","type","float","amount","Component","Payments","k","v","data","map","item","assign","name","total","reduce","accum","current","errorMsg","concat","calculate","am","Number","dollars","stringAmount","formatDollar","numberAmount","clearAmount","boxChecked","isDownloading","saveToHistory","me","axios","get","then","resp","_this2","id","label","margin","variant","Button_default","height","marginLeft","minWidth","onClick","Clear_default","CircularProgress_default","payments_UtilCard","key","minHeight","visibility","FormControlLabel_default","control","Checkbox_default","checked","disabled","date","Date","pieces","toISOString","split","doc","epoch","getTime","time","toConsumableArray","post","console","log","num","String","toFixed","Sales","Header","toggleDrawer","open","isOpen","sideList","List_default","ListItem_default","button","setPage","ListItemIcon_default","PieChart_default","ListItemText_default","primary","AttachMoney_default","AppBar_default","position","paddingLeft","paddingRight","IconButton_default","aria-label","Menu_default","Typography_default","Drawer_default","onClose","tabIndex","role","onKeyDown","App","page","payments_Payments","sales_Sales","backgroundColor","src_Header","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd1aac0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nclass UtilCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      percent: props.percent\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n  }\n\n  render() {\n    return (\n      <Card style={{width:'250px', padding:'17px', marginTop:'15px'}}>\n        <div style={{display:'inline-block', width:'30px'}}>\n          <TextField\n            value={this.state.percent}\n            onChange={this.handleChange()}\n            style={{display:'inline-block', verticalAlign:'middle', width:'30px'}}\n            inputProps={{\n              style:{padding:'2px'}\n            }}\n            onFocus={this.handleFocus()}\n            onBlur={this.handleBlur()}\n          />\n        </div>\n        <span style={{verticalAlign:'middle', marginRight:'20px'}}>%</span>\n        <div style={{color:'#3f51b5', fontWeight:'600', display:'inline-block', verticalAlign:'middle'}}>{this.props.type}</div>\n        <div style={{display:'inline-block', float:'right', marginTop:'3px'}}>{this.props.amount}</div>\n      </Card>\n    );\n  }\n\n  handleFocus = () => event => {\n    if(this.state.percent === 0) {\n      this.setState({percent: ''});\n    }\n  }\n\n  handleBlur = () => event => {\n    if(this.state.percent === '') {\n      this.setState({percent: 0}, this.setPer);\n    }\n  }\n\n  handleChange = () => event => {\n    const value = event.target.value;\n\n    if(value.length <= 3) {\n      this.setState({\n        percent: value ? parseInt(value) : 0\n      }, this.setPer);\n    }\n  }\n\n  setPer = () => this.props.setPercentages(this.props.pkey, this.state.percent)\n}\n\nexport default UtilCard;","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport ClearIcon from '@material-ui/icons/Clear';\nimport UtilCard from './UtilCard.js';\nimport axios from 'axios';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Payments extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            data: [],\n            errorMsg: '',\n            boxChecked: false,\n            isDownloading: true\n        };\n      \n        this.handleChange = this.handleChange.bind(this);\n        this.calculate = this.calculate.bind(this);\n        this.setPercentages = this.setPercentages.bind(this);\n        this.clearAmount = this.clearAmount.bind(this);\n        this.saveToHistory = this.saveToHistory.bind(this);\n    }\n\n    componentWillMount() {\n        const me  = this;\n        const url = 'https://api.mlab.com/api/1/databases/heroku_0lwkfbwj/collections/bills?apiKey=aVVSLiUK4fYFdptcpCwQR2sO9QXtZKXs';\n\n        axios.get(url).then(resp => me.setState({data: resp.data, isDownloading: false}));\n    }\n\n    render() {\n        return(\n            <div style={{padding:'20px'}}>\n                <div>\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Dollar Amount\"\n                        value={this.state.name}\n                        onChange={this.handleChange()}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        style={{width:'230px', display:'inline-block'}}\n                    />\n                    <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        style={{marginTop:'19px', height:'50px', width:'55px', marginLeft:'0px', minWidth:'55px'}}\n                        onClick={this.clearAmount}>\n                        <ClearIcon />\n                    </Button>\n                </div>\n                \n                <div style={{marginTop:'25px'}}>\n                    {this.state.isDownloading ? \n                        <CircularProgress style={{width:'70px', height:'70px', marginLeft:'90px'}}/> \n                        : \n                        this.state.data.map(item => {\n                            return (<UtilCard \n                                key={item.name}\n                                type={item.name} \n                                percent={item.percent} \n                                amount={item.stringAmount} \n                                setPercentages={this.setPercentages} \n                                pkey={item.name}\n                            />);\n                        })\n                    }\n                </div>\n\n                <div style={{color:'red', marginTop:'20px', minHeight:'30px', visibility:this.state.errorMsg?'visible':'hidden'}}>{this.state.errorMsg}</div>\n\n                <br></br>\n                <div>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.boxChecked}\n                                onChange={(event) => this.setState({ boxChecked: event.target.checked })}\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"I'm Ready to Save\"\n                    />\n                    <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        disabled={!this.state.boxChecked}\n                        onClick={this.saveToHistory}\n                        style={{marginLeft:'55px'}}>\n                    Save\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    saveToHistory() {\n        const url  = \"https://api.mlab.com/api/1/databases/heroku_0lwkfbwj/collections/bills_history?apiKey=aVVSLiUK4fYFdptcpCwQR2sO9QXtZKXs\";\n        const date = new Date();\n        let pieces = date.toISOString().split('T');\n        const doc  = {\n            total: Number(this.state.name),\n            epoch: date.getTime(),\n            date : pieces[0],\n            time : pieces[1].split('.')[0],\n            data : [...this.state.data]\n        };\n\n        axios.post(url, doc).then(resp => console.log(resp));\n        this.setState({boxChecked: false});\n    }\n\n    setPercentages = (k, v) => {\n        this.setState({\n            data: this.state.data.map(item => Object.assign(item, item.name === k ? {percent: v} : {}))\n        }, () => {\n            const total = this.state.data.reduce((accum, current) => accum + current.percent, 0);\n\n            this.setState({\n                errorMsg: total !== 100 ? `Percentages add up to ${total}, they should add up to 100` : ''\n            });\n\n            this.calculate(this.state.name);\n        });\n    }\n    \n    calculate = amount => {\n        const am = Number(amount);\n        this.setState({\n            data: this.state.data.map(item => {\n                let dollars = am * (item.percent / 100);\n                return Object.assign(item, {\n                    stringAmount: this.formatDollar(dollars),\n                    numberAmount: dollars\n                });\n            })\n        });\n    }\n\n    formatDollar(num) {\n        return '$' + (String(num).split('.')[1] ? num.toFixed(2) : num);\n    }\n    \n    handleChange = () => event => {\n        this.setState({\n            name: event.target.value\n        });\n\n        this.calculate(event.target.value);\n    }\n\n    clearAmount = () => {\n        this.setState({name:''}, () => this.calculate(0));\n    }\n}\n\nexport default Payments;","import React, { Component } from 'react';\n\nclass Sales extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div style={{padding:'20px'}}>\n                Under Development\n            </div>\n        );\n    }\n}\n\nexport default Sales;","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Drawer from '@material-ui/core/Drawer';\nimport MoneyIcon from '@material-ui/icons/AttachMoney';\nimport PieChartIcon from '@material-ui/icons/PieChart';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n\n    render() {\n        const sideList = (\n            <div >\n                <List>\n                    <ListItem button key=\"Bills\" onClick={() => {this.props.setPage('Payments')}}>\n                        <ListItemIcon><PieChartIcon /></ListItemIcon>\n                        <ListItemText primary=\"Bills\"/>\n                    </ListItem>\n                    <ListItem button key=\"Sales\" onClick={() => {this.props.setPage('Sales')}}>\n                        <ListItemIcon><MoneyIcon /></ListItemIcon>\n                        <ListItemText primary=\"Sales\"/>\n                    </ListItem>\n                </List>\n            </div>\n        );\n\n        return (\n            <AppBar position='static' style={{display:'inline-block', padding:'8px'}}>\n                <div style={{paddingLeft:'0px', paddingRight:'20px', display:'inline-block'}}>\n                    <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer(true)}>\n                        <MenuIcon />\n                    </IconButton>\n                </div>\n                <Typography \n                    variant=\"h6\" \n                    color=\"inherit\"\n                    style={{display:'inline-block', verticalAlign:'middle'}}>\n                    Prime Finds\n                </Typography>\n\n                <Drawer open={this.state.isOpen} onClose={this.toggleDrawer(false)}>\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                        style={{width:'250px'}}\n                        onClick={this.toggleDrawer(false)}\n                        onKeyDown={this.toggleDrawer(false)}>\n                        {sideList}\n                    </div>\n                </Drawer>\n            </AppBar>\n        );\n    }\n\n    toggleDrawer = open => () => {\n        this.setState({\n          isOpen: open,\n        });\n      };\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\nimport Payments from './pages/payments/Payments';\nimport Sales from './pages/sales/Sales';\nimport Header from './Header';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 'Payments'\n    }\n\n    this.setPage = this.setPage.bind(this);\n  }\n\n  render() {\n    const page = this.state.page === 'Payments' ? <Payments /> : <Sales />;\n\n    return (\n      <div style={{backgroundColor:'#d7dae2', minHeight:'100vh'}}>\n        <Header setPage={this.setPage}></Header>\n        {page}\n      </div>\n    );\n  }\n\n  setPage(name) {\n    this.setState({page: name});\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}