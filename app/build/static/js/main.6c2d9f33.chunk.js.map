{"version":3,"sources":["pages/payments/UtilCard.js","pages/payments/Payments.js","pages/sales/Sales.js","pages/history/BillsHistory.js","Header.js","pages/csv/UploadCsv.js","App.js","serviceWorker.js","index.js"],"names":["UtilCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFocus","event","state","percent","setState","handleBlur","setPer","handleChange","value","target","length","parseInt","setPercentages","pkey","bind","assertThisInitialized","react_default","a","createElement","Card_default","style","width","padding","marginTop","display","TextField_default","onChange","verticalAlign","inputProps","onFocus","onBlur","marginRight","color","fontWeight","type","float","amount","Component","Payments","k","v","data","map","item","assign","name","total","reduce","accum","current","errorMsg","concat","calculate","am","Number","dollars","stringAmount","formatDollar","numberAmount","clearAmount","boxChecked","isDownloading","saveToHistory","me","window","location","host","includes","_id","$oid","axios","get","then","resp","_this2","id","label","margin","variant","Button_default","height","marginLeft","minWidth","onClick","Clear_default","CircularProgress_default","payments_UtilCard","key","minHeight","visibility","FormControlLabel_default","control","Checkbox_default","checked","disabled","date","Date","pieces","toISOString","split","doc","epoch","getTime","time","toConsumableArray","post","console","log","num","String","toFixed","Sales","BillsHistory","_getChart","_getTable","onStartChange","onEndChange","showTable","start","end","tableData","defaultValue","evt","d","_this3","url","info","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","history","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","bill","err","return","push","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","row","component","scope","google","visualization","DataTable","addColumn","i","Math","floor","random","getRandomColor","arrayToDataTable","role","view","DataView","setColumns","calc","sourceColumn","ColumnChart","document","getElementById","draw","backgroundColor","legend","position","bar","groupWidth","Header","toggleDrawer","open","isOpen","modalOpen","modalText","addEmail","copyEmails","sideList","List_default","ListItem_default","button","setPage","ListItemIcon_default","PieChart_default","ListItemText_default","primary","AttachMoney_default","index_es","History_default","GridOn_default","AppBar_default","paddingLeft","paddingRight","IconButton_default","aria-label","Menu_default","Typography_default","paddingTop","cursor","FileCopy_default","PersonAdd_default","Dialog_default","DialogTitle_default","DialogContent_default","autoFocus","fullWidth","e","DialogActions_default","Drawer_default","onClose","tabIndex","onKeyDown","s","acc","address","substring","UploadCsv","encType","method","action","htmlFor","accept","files","App","page","payments_Payments","sales_Sales","history_BillsHistory","csv_UploadCsv","src_Header","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c2d9f33.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nclass UtilCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      percent: props.percent\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n  }\n\n  render() {\n    return (\n      <Card style={{width:'250px', padding:'17px', marginTop:'15px'}}>\n        <div style={{display:'inline-block', width:'30px'}}>\n          <TextField\n            value={this.state.percent}\n            onChange={this.handleChange()}\n            style={{display:'inline-block', verticalAlign:'middle', width:'30px'}}\n            inputProps={{\n              style:{padding:'2px'}\n            }}\n            onFocus={this.handleFocus()}\n            onBlur={this.handleBlur()}\n          />\n        </div>\n        <span style={{verticalAlign:'middle', marginRight:'20px'}}>%</span>\n        <div style={{color:'#3f51b5', fontWeight:'600', display:'inline-block', verticalAlign:'middle'}}>{this.props.type}</div>\n        <div style={{display:'inline-block', float:'right', marginTop:'3px'}}>{this.props.amount}</div>\n      </Card>\n    );\n  }\n\n  handleFocus = () => event => {\n    if(this.state.percent === 0) {\n      this.setState({percent: ''});\n    }\n  }\n\n  handleBlur = () => event => {\n    if(this.state.percent === '') {\n      this.setState({percent: 0}, this.setPer);\n    }\n  }\n\n  handleChange = () => event => {\n    const value = event.target.value;\n\n    if(value.length <= 3) {\n      this.setState({\n        percent: value ? parseInt(value) : 0\n      }, this.setPer);\n    }\n  }\n\n  setPer = () => this.props.setPercentages(this.props.pkey, this.state.percent)\n}\n\nexport default UtilCard;","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport ClearIcon from '@material-ui/icons/Clear';\nimport UtilCard from './UtilCard.js';\nimport axios from 'axios';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Payments extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            data: [],\n            errorMsg: '',\n            boxChecked: false,\n            isDownloading: true\n        };\n      \n        this.handleChange = this.handleChange.bind(this);\n        this.calculate = this.calculate.bind(this);\n        this.setPercentages = this.setPercentages.bind(this);\n        this.clearAmount = this.clearAmount.bind(this);\n        this.saveToHistory = this.saveToHistory.bind(this);\n    }\n\n    componentWillMount() {\n        const me  = this;\n        const url = 'https://api.mlab.com/api/1/databases/heroku_0lwkfbwj/collections/bills?apiKey=aVVSLiUK4fYFdptcpCwQR2sO9QXtZKXs';\n\n        if(window.location.host.includes('localhost')) {\n            me.setState({\n                data: [{ \"_id\": { \"$oid\": \"5bfdedebfb6fc006ff268fb2\" }, \"name\": \"Office\", \"percent\": 25, \"stringAmount\": \"$0\", \"numberAmount\": 0 }, { \"_id\": { \"$oid\": \"5bfdee65fb6fc006ff268fe6\" }, \"name\": \"House\", \"percent\": 40, \"stringAmount\": \"$0\", \"numberAmount\": 0 }, { \"_id\": { \"$oid\": \"5bfdee7ffb6fc006ff268ff9\" }, \"name\": \"Other1\", \"percent\": 20, \"stringAmount\": \"$0\", \"numberAmount\": 0 }, { \"_id\": { \"$oid\": \"5bfdee90fb6fc006ff269001\" }, \"name\": \"Other2\", \"percent\": 10, \"stringAmount\": \"$0\", \"numberAmount\": 0 }, { \"_id\": { \"$oid\": \"5bfed8f5fb6fc006ff27381f\" }, \"name\": \"Other3\", \"percent\": 5, \"stringAmount\": \"$0\", \"numberAmount\": 0 }],\n                isDownloading: false\n            });\n        }\n        else {\n            axios.get(url).then(resp => me.setState({data: resp.data, isDownloading: false}));\n        }\n    }\n\n    render() {\n        return(\n            <div style={{padding:'20px'}}>\n                <div>\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Dollar Amount\"\n                        value={this.state.name}\n                        onChange={this.handleChange()}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        style={{width:'230px', display:'inline-block'}}\n                    />\n                    <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        style={{marginTop:'19px', height:'50px', width:'55px', marginLeft:'0px', minWidth:'55px'}}\n                        onClick={this.clearAmount}>\n                        <ClearIcon />\n                    </Button>\n                </div>\n                \n                <div style={{marginTop:'25px'}}>\n                    {this.state.isDownloading ? \n                        <CircularProgress style={{width:'70px', height:'70px', marginLeft:'90px'}}/> \n                        : \n                        this.state.data.map(item => {\n                            return (<UtilCard \n                                key={item.name}\n                                type={item.name} \n                                percent={item.percent} \n                                amount={item.stringAmount} \n                                setPercentages={this.setPercentages} \n                                pkey={item.name}\n                            />);\n                        })\n                    }\n                </div>\n\n                <div style={{color:'red', marginTop:'20px', minHeight:'30px', visibility:this.state.errorMsg?'visible':'hidden'}}>{this.state.errorMsg}</div>\n\n                <br></br>\n                <div>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.boxChecked}\n                                onChange={(event) => this.setState({ boxChecked: event.target.checked })}\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"I'm Ready to Save\"\n                    />\n                    <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        disabled={!this.state.boxChecked}\n                        onClick={this.saveToHistory}\n                        style={{marginLeft:'55px'}}>\n                    Save\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    saveToHistory() {\n        const url  = \"https://api.mlab.com/api/1/databases/heroku_0lwkfbwj/collections/bills_history?apiKey=aVVSLiUK4fYFdptcpCwQR2sO9QXtZKXs\";\n        const date = new Date();\n        let pieces = date.toISOString().split('T');\n        const doc  = {\n            total: Number(this.state.name),\n            epoch: date.getTime(),\n            date : pieces[0],\n            time : pieces[1].split('.')[0],\n            data : [...this.state.data]\n        };\n\n        axios.post(url, doc).then(resp => console.log(resp));\n        this.setState({boxChecked: false});\n    }\n\n    setPercentages = (k, v) => {\n        this.setState({\n            data: this.state.data.map(item => Object.assign(item, item.name === k ? {percent: v} : {}))\n        }, () => {\n            const total = this.state.data.reduce((accum, current) => accum + current.percent, 0);\n\n            this.setState({\n                errorMsg: total !== 100 ? `Percentages add up to ${total}, they should add up to 100` : ''\n            });\n\n            this.calculate(this.state.name);\n        });\n    }\n    \n    calculate = amount => {\n        const am = Number(amount);\n        this.setState({\n            data: this.state.data.map(item => {\n                let dollars = am * (item.percent / 100);\n                return Object.assign(item, {\n                    stringAmount: this.formatDollar(dollars),\n                    numberAmount: dollars\n                });\n            })\n        });\n    }\n\n    formatDollar(num) {\n        return '$' + (String(num).split('.')[1] ? num.toFixed(2) : num);\n    }\n    \n    handleChange = () => event => {\n        this.setState({\n            name: event.target.value\n        });\n\n        this.calculate(event.target.value);\n    }\n\n    clearAmount = () => {\n        this.setState({name:''}, () => this.calculate(0));\n    }\n}\n\nexport default Payments;","import React, { Component } from 'react';\n\nclass Sales extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div style={{padding:'20px'}}>\n                Under Development\n            </div>\n        );\n    }\n}\n\nexport default Sales;","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nclass BillsHistory extends Component {\n    constructor(props) {\n        super(props);\n\n        this._getChart = this._getChart.bind(this);\n        this.onClick   = this.onClick.bind(this);\n        this._getTable = this._getTable.bind(this);\n        this.onStartChange = this.onStartChange.bind(this);\n        this.onEndChange = this.onEndChange.bind(this);\n\n        this.state = {\n            showTable: false,\n            start: '11-29-2018',\n            end: '12-01-2018',\n            tableData: []\n        };\n\n        this.data = [\n            {\n                \"_id\": {\n                    \"$oid\": \"5bfdedebfb6fc006ff268fb2\"\n                },\n                \"name\": \"Office\",\n                \"percent\": 25,\n                \"stringAmount\": \"$2.50\",\n                \"numberAmount\": 2.5\n            },\n            {\n                \"_id\": {\n                    \"$oid\": \"5bfdee65fb6fc006ff268fe6\"\n                },\n                \"name\": \"House\",\n                \"percent\": 40,\n                \"stringAmount\": \"$4\",\n                \"numberAmount\": 4\n            },\n            {\n                \"_id\": {\n                    \"$oid\": \"5bfdee7ffb6fc006ff268ff9\"\n                },\n                \"name\": \"Other1\",\n                \"percent\": 20,\n                \"stringAmount\": \"$2\",\n                \"numberAmount\": 2\n            },\n            {\n                \"_id\": {\n                    \"$oid\": \"5bfdee90fb6fc006ff269001\"\n                },\n                \"name\": \"Other2\",\n                \"percent\": 10,\n                \"stringAmount\": \"$1\",\n                \"numberAmount\": 1\n            },\n            {\n                \"_id\": {\n                    \"$oid\": \"5bfed8f5fb6fc006ff27381f\"\n                },\n                \"name\": \"Other3\",\n                \"percent\": 5,\n                \"stringAmount\": \"$0.50\",\n                \"numberAmount\": 0.5\n            }\n        ];\n    }\n\n    render() {\n        return (\n            <div style={{ padding: '20px' }}>\n                <TextField\n                    id=\"date\"\n                    label=\"Start Date\"\n                    type=\"date\"\n                    defaultValue=\"2018-11-30\"\n                    onChange={this.onStartChange}\n                />\n                <TextField\n                    id=\"date\"\n                    label=\"End Date\"\n                    type=\"date\"\n                    defaultValue=\"2018-12-01\"\n                    style={{marginLeft:'50px'}}\n                    onChange={this.onEndChange}\n                />\n                <Button variant=\"outlined\" color=\"primary\" style={{marginTop:'5px', marginLeft:'50px'}} onClick={this.onClick}>\n                    Get Data\n                </Button>\n                <div style={{marginTop: '100px'}}>\n                    {this.state.showTable ? this._getTable() : null}\n                    <div id=\"chart_div\" style={{ width: '500px', height: '350px', display: 'inline-block', verticalAlign:'middle'}}></div>\n                </div>\n            </div>\n        );\n    }\n\n    onStartChange(evt) {\n        const d = evt.target.value.split('-');\n        this.setState({start: `${d[1]}-${d[2]}-${d[0]}`});\n    }\n\n    onEndChange(evt) {\n        const d = evt.target.value.split('-');\n        this.setState({ end: `${d[1]}-${d[2]}-${d[0]}` }, ()=> {console.log(this.state)});\n    }\n\n    onClick() {\n        let start = new Date(this.state.start).getTime();\n        let end = new Date(this.state.end).getTime();\n        const url = `https://api.mlab.com/api/1/databases/heroku_0lwkfbwj/collections/bills_history?q={epoch:{$lt:${end},$gt:${start}}}&apiKey=aVVSLiUK4fYFdptcpCwQR2sO9QXtZKXs`;\n        axios.get(url).then(resp => {\n            let info = {};\n            for(let history of resp.data) {\n                for(let bill of history.data) {\n                    if(info[bill.name]) {\n                        info[bill.name] += bill.numberAmount;\n                    }\n                    else {\n                        info[bill.name] = bill.numberAmount\n                    }\n                }\n            }\n\n            let data = [];\n            for(let k in info) {\n                data.push({\n                    name: k,\n                    value: info[k]\n                });\n            }\n\n            this.setState({ tableData: data, showTable: true });\n            //this._getChart();\n        });\n    }\n\n    _getTable() {\n        return (\n            <Paper style={{width:'300px', display:'inline-block', verticalAlign:'middle', marginRight:'50px'}}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell numeric>Amount Spent</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.tableData.map(row => {\n                            return (\n                                <TableRow key={row.name}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell numeric>{row.value}</TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </Paper>\n        );\n    }\n\n    _getChart() {\n        var data = new window.google.visualization.DataTable();\n        data.addColumn('string', 'Bills');\n\n        function getRandomColor() {\n            var letters = '0123456789ABCDEF';\n            var color = '#';\n            for (var i = 0; i < 6; i++) {\n                color += letters[Math.floor(Math.random() * 16)];\n            }\n            return color;\n        }\n\n        let d = this.data.map(item => {\n            return [item.name, item.numberAmount, getRandomColor()];\n        });\n\n        var data = window.google.visualization.arrayToDataTable([\n            ['Name', 'Dollars', { role: 'style' }],\n            ...d\n        ]);\n\n        var view = new window.google.visualization.DataView(data);\n        view.setColumns([0, 1,\n            {\n                calc: \"stringify\",\n                sourceColumn: 1,\n                type: \"string\",\n                role: \"annotation\"\n            },\n            2\n        ]);\n\n        var options = {\n            backgroundColor: 'transparent',\n            legend: { position: \"none\" },\n            bar: { groupWidth: \"75%\" },\n        };\n\n        var chart = new window.google.visualization.ColumnChart(document.getElementById('chart_div'));\n\n        chart.draw(view, options);\n    }\n}\n\nexport default BillsHistory;","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Drawer from '@material-ui/core/Drawer';\nimport MoneyIcon from '@material-ui/icons/AttachMoney';\nimport PieChartIcon from '@material-ui/icons/PieChart';\nimport HistoryIcon from '@material-ui/icons/History';\nimport { Divider } from '@material-ui/core';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport GridIcon from '@material-ui/icons/GridOn';\nimport axios from 'axios';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            modalOpen: false,\n            modalText: ''\n        };\n\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.addEmail = this.addEmail.bind(this);\n        this.copyEmails = this.copyEmails.bind(this);\n    }\n\n    render() {\n        const sideList = (\n            <div >\n                <List>\n                    <ListItem button key=\"Bills\" onClick={() => {this.props.setPage('Payments')}}>\n                        <ListItemIcon><PieChartIcon /></ListItemIcon>\n                        <ListItemText primary=\"Bills\"/>\n                    </ListItem>\n                    <ListItem button key=\"Sales\" onClick={() => {this.props.setPage('Sales')}}>\n                        <ListItemIcon><MoneyIcon /></ListItemIcon>\n                        <ListItemText primary=\"Sales\"/>\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button key=\"BillsHistory\" onClick={() => {this.props.setPage('BillsHistory')}}>\n                        <ListItemIcon><HistoryIcon /></ListItemIcon>\n                        <ListItemText primary=\"Bills History\"/>\n                    </ListItem>\n                    <ListItem button key=\"CSV\" onClick={() => {this.props.setPage('CSV')}}>\n                        <ListItemIcon><GridIcon /></ListItemIcon>\n                        <ListItemText primary=\"CSV\"/>\n                    </ListItem>\n                </List>\n            </div>\n        );\n\n        return (\n            <AppBar position='static' style={{display:'inline-block', padding:'8px'}}>\n                <div style={{paddingLeft:'0px', paddingRight:'20px', display:'inline-block'}}>\n                    <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer(true)}>\n                        <MenuIcon />\n                    </IconButton>\n                </div>\n                <Typography \n                    variant=\"h6\" \n                    color=\"inherit\"\n                    style={{display:'inline-block', verticalAlign:'middle'}}>\n                    Prime Finds\n                </Typography>\n\n                <div style={{float:'right', paddingTop:'10px', paddingRight:'10px', cursor:'pointer'}}>\n                    <FileCopyIcon onClick={this.copyEmails} style={{marginRight:'25px'}}/>\n                    <PersonAddIcon onClick={()=>this.setState({modalOpen:true})}/>\n                </div>\n\n                <Dialog open={this.state.modalOpen}>\n                    <DialogTitle id=\"form-dialog-title\">Add Email</DialogTitle>\n                    <DialogContent style={{width:'300px'}}>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Email Address\"\n                            type=\"email\"\n                            fullWidth\n                            value={this.state.modalText}\n                            onChange={(e)=>this.setState({modalText: e.target.value})}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button \n                            onClick={()=>this.setState({modalOpen: false, modalText: ''})} \n                            color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button \n                            onClick={this.addEmail} \n                            color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Drawer open={this.state.isOpen} onClose={this.toggleDrawer(false)}>\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                        style={{width:'250px'}}\n                        onClick={this.toggleDrawer(false)}\n                        onKeyDown={this.toggleDrawer(false)}>\n                        {sideList}\n                    </div>\n                </Drawer>\n            </AppBar>\n        );\n    }\n\n    copyEmails() {\n        const me  = this;\n        const url = 'https://api.mlab.com/api/1/databases/heroku_0lwkfbwj/collections/email?apiKey=aVVSLiUK4fYFdptcpCwQR2sO9QXtZKXs';\n        \n        axios.get(url).then(resp => {\n            let s = resp.data.reduce((acc, current) => acc + current.address + ',', '');\n            s = s.substring(0, s.length - 1);\n            console.log(s);\n        });\n    }\n\n    addEmail() {\n        console.log(this.state.modalText);\n        const url  = \"https://api.mlab.com/api/1/databases/heroku_0lwkfbwj/collections/email?apiKey=aVVSLiUK4fYFdptcpCwQR2sO9QXtZKXs\";\n\n        axios.post(url, {address:this.state.modalText}).then(resp => console.log(resp));\n        this.setState({modalOpen: false, modalText: ''});\n    }\n\n    toggleDrawer = open => () => {\n        this.setState({\n          isOpen: open,\n        });\n      };\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass UploadCsv extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return (\n            <form style={{margin:'20px 0 0 20px'}} encType=\"multipart/form-data\" method=\"post\" action=\"/manifests\">\n                <label htmlFor=\"avatar\">Select Manifest</label>\n\n                <input \n                    style={{marginLeft:'15px'}}\n                    type=\"file\"\n                    id=\"avatar\"\n                    name=\"avatar\"\n                    accept=\".csv, .xlsx\" \n                    onChange={(e) => console.log(e.target.files)}\n                />\n                <div style={{marginTop:'10px'}}>\n                    <input type=\"submit\" value=\"Submit\" id=\"submit\" />\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default UploadCsv;","import React, { Component } from 'react';\nimport './App.css';\nimport Payments from './pages/payments/Payments';\nimport Sales from './pages/sales/Sales';\nimport BillsHistory from './pages/history/BillsHistory';\nimport Header from './Header';\nimport UploadCsv from './pages/csv/UploadCsv';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 'Payments'\n    }\n\n    this.setPage = this.setPage.bind(this);\n  }\n\n  render() {\n    let page;\n    switch(this.state.page) {\n        case 'Payments': \n            page = <Payments />;\n            break;\n        case 'Sales':\n            page = <Sales />;\n            break;\n        case 'BillsHistory':\n            page = <BillsHistory />;\n            break;\n        case 'CSV':\n            page = <UploadCsv />;\n            break;\n      default:\n        page = <div>Error in switch statement</div>\n    }\n\n    return (\n      <div style={{backgroundColor:'#d7dae2', minHeight:'100vh'}}>\n        <Header setPage={this.setPage}></Header>\n        {page}\n      </div>\n    );\n  }\n\n  setPage(name) {\n    this.setState({page: name});\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}