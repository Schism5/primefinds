{"version":3,"sources":["pages/payments/UtilCard.js","pages/payments/Payments.js","pages/sales/Sales.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["UtilCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFocus","event","state","percent","setState","handleBlur","setPer","handleChange","value","target","length","parseInt","setPercentages","pkey","bind","assertThisInitialized","react_default","a","createElement","Card_default","style","width","padding","marginTop","display","TextField_default","onChange","verticalAlign","inputProps","onFocus","onBlur","marginRight","color","fontWeight","type","float","amount","Component","Payments","k","v","data","map","item","assign","name","total","reduce","accum","current","errorMsg","concat","calculate","Number","am","formatDollar","clearAmount","me","axios","get","then","resp","_this2","id","label","margin","variant","Button_default","height","marginLeft","minWidth","onClick","Clear_default","payments_UtilCard","key","num","String","split","toFixed","Sales","Header","toggleDrawer","open","isOpen","sideList","List_default","ListItem_default","button","setPage","ListItemIcon_default","PieChart_default","ListItemText_default","primary","AttachMoney_default","AppBar_default","position","paddingLeft","paddingRight","IconButton_default","aria-label","Menu_default","Typography_default","Drawer_default","onClose","tabIndex","role","onKeyDown","App","page","payments_Payments","sales_Sales","backgroundColor","minHeight","src_Header","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76078d58.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\n\nclass UtilCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      percent: props.percent\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n  }\n\n  render() {\n    return (\n      <Card style={{width:'250px', padding:'17px', marginTop:'15px'}}>\n        <div style={{display:'inline-block', width:'30px'}}>\n          <TextField\n            value={this.state.percent}\n            onChange={this.handleChange()}\n            style={{display:'inline-block', verticalAlign:'middle', width:'30px'}}\n            inputProps={{\n              style:{padding:'2px'}\n            }}\n            onFocus={this.handleFocus()}\n            onBlur={this.handleBlur()}\n          />\n        </div>\n        <span style={{verticalAlign:'middle', marginRight:'20px'}}>%</span>\n        <div style={{color:'#3f51b5', fontWeight:'600', display:'inline-block', verticalAlign:'middle'}}>{this.props.type}</div>\n        <div style={{display:'inline-block', float:'right', marginTop:'3px'}}>{this.props.amount}</div>\n      </Card>\n    );\n  }\n\n  handleFocus = () => event => {\n    if(this.state.percent === 0) {\n      this.setState({percent: ''});\n    }\n  }\n\n  handleBlur = () => event => {\n    if(this.state.percent === '') {\n      this.setState({percent: 0}, this.setPer);\n    }\n  }\n\n  handleChange = () => event => {\n    const value = event.target.value;\n\n    if(value.length <= 3) {\n      this.setState({\n        percent: value ? parseInt(value) : 0\n      }, this.setPer);\n    }\n  }\n\n  setPer = () => this.props.setPercentages(this.props.pkey, this.state.percent)\n}\n\nexport default UtilCard;","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport ClearIcon from '@material-ui/icons/Clear';\nimport UtilCard from './UtilCard.js';\nimport axios from 'axios';\n\nclass Payments extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            data: [],\n            errorMsg: ''\n        };\n      \n        this.handleChange = this.handleChange.bind(this);\n        this.calculate = this.calculate.bind(this);\n        this.setPercentages = this.setPercentages.bind(this);\n        this.clearAmount = this.clearAmount.bind(this);\n    }\n\n    componentWillMount() {\n        const me = this;\n        axios.get('https://api.mlab.com/api/1/databases/heroku_0lwkfbwj/collections/bills?apiKey=aVVSLiUK4fYFdptcpCwQR2sO9QXtZKXs')\n        .then(resp => {\n            me.setState({\n                data: resp.data.map(item => {\n                    return Object.assign(item, {percent: Number(item.percent)})\n                })\n            });\n        });\n    }\n\n    render() {\n        return(\n            <div style={{padding:'20px'}}>\n                <div>\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Dollar Amount\"\n                        value={this.state.name}\n                        onChange={this.handleChange()}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        style={{width:'230px', display:'inline-block'}}\n                    />\n                    <Button \n                        variant=\"raised\" \n                        color=\"primary\" \n                        style={{marginTop:'19px', height:'50px', width:'55px', marginLeft:'0px', minWidth:'55px'}}\n                        onClick={this.clearAmount}>\n                        <ClearIcon />\n                    </Button>\n                </div>\n                \n                <div style={{marginTop:'25px'}}>\n                    {this.state.data.map(item => {\n                        return (<UtilCard \n                            key={item.name}\n                            type={item.name} \n                            percent={item.percent} \n                            amount={item.amount} \n                            setPercentages={this.setPercentages} \n                            pkey={item.name}\n                        />);\n                    })}\n                </div>\n\n                <div style={{color:'red', marginTop:'20px'}}>{this.state.errorMsg}</div>\n            </div>\n        );\n    }\n\n    setPercentages = (k, v) => {\n        this.setState({\n            data: this.state.data.map(item => Object.assign(item, item.name === k ? {percent: v} : {}))\n        }, () => {\n            const total = this.state.data.reduce((accum, current) => accum + current.percent, 0);\n\n            this.setState({\n                errorMsg: total !== 100 ? `Percentages add up to ${total}, they should add up to 100` : ''\n            });\n\n            this.calculate(Number(this.state.name));\n        });\n    }\n    \n    calculate = amount => {\n        const am = Number(amount);\n        this.setState({\n            data: this.state.data.map(item => {\n                let percent = am * (item.percent / 100);\n                return Object.assign(item, {amount: this.formatDollar(percent)})\n            })\n        });\n    }\n\n    formatDollar(num) {\n        return '$' + (String(num).split('.')[1] ? num.toFixed(2) : num);\n    }\n    \n    handleChange = () => event => {\n        this.setState({\n            name: event.target.value\n        });\n\n        this.calculate(Number(event.target.value));\n    }\n\n    clearAmount = () => {\n        this.setState({name:''}, () => this.calculate(0));\n    }\n}\n\nexport default Payments;","import React, { Component } from 'react';\n\nclass Sales extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div style={{padding:'20px'}}>\n                Under Development\n            </div>\n        );\n    }\n}\n\nexport default Sales;","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Drawer from '@material-ui/core/Drawer';\nimport MoneyIcon from '@material-ui/icons/AttachMoney';\nimport PieChartIcon from '@material-ui/icons/PieChart';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n\n    render() {\n        const sideList = (\n            <div >\n                <List>\n                    <ListItem button key=\"Bills\" onClick={() => {this.props.setPage('Payments')}}>\n                        <ListItemIcon><PieChartIcon /></ListItemIcon>\n                        <ListItemText primary=\"Bills\"/>\n                    </ListItem>\n                    <ListItem button key=\"Sales\" onClick={() => {this.props.setPage('Sales')}}>\n                        <ListItemIcon><MoneyIcon /></ListItemIcon>\n                        <ListItemText primary=\"Sales\"/>\n                    </ListItem>\n                </List>\n            </div>\n        );\n\n        return (\n            <AppBar position='static' style={{display:'inline-block', padding:'8px'}}>\n                <div style={{paddingLeft:'0px', paddingRight:'20px', display:'inline-block'}}>\n                    <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer(true)}>\n                        <MenuIcon />\n                    </IconButton>\n                </div>\n                <Typography \n                    variant=\"h6\" \n                    color=\"inherit\"\n                    style={{display:'inline-block', verticalAlign:'middle'}}>\n                    Prime Finds\n                </Typography>\n\n                <Drawer open={this.state.isOpen} onClose={this.toggleDrawer(false)}>\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                        style={{width:'250px'}}\n                        onClick={this.toggleDrawer(false)}\n                        onKeyDown={this.toggleDrawer(false)}>\n                        {sideList}\n                    </div>\n                </Drawer>\n            </AppBar>\n        );\n    }\n\n    toggleDrawer = open => () => {\n        this.setState({\n          isOpen: open,\n        });\n      };\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\nimport Payments from './pages/payments/Payments';\nimport Sales from './pages/sales/Sales';\nimport Header from './Header';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 'Payments'\n    }\n\n    this.setPage = this.setPage.bind(this);\n  }\n\n  render() {\n    const page = this.state.page === 'Payments' ? <Payments /> : <Sales />;\n\n    return (\n      <div style={{backgroundColor:'#d7dae2', minHeight:'100vh'}}>\n        <Header setPage={this.setPage}></Header>\n        {page}\n      </div>\n    );\n  }\n\n  setPage(name) {\n    this.setState({page: name});\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}